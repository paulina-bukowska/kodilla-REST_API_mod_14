buildscript {
	ext {
		springBootVersion = '2.0.0.M7'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//dla Heroku zakomentować 'war'
apply plugin: 'war'

group = 'com.crud'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.projectlombok:lombok:1.16.20')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('mysql:mysql-connector-java')

	//Heroku
//	compile('org.postgresql:postgresql')

	//Swagger
	compile('io.springfox:springfox-swagger2:2.7.0')
	compile('io.springfox:springfox-swagger-ui:2.7.0')

	testCompile('org.springframework.boot:spring-boot-starter-test')

	//gdy aplikacja ma być pakowana do WAR i serwer Tomcat dostarczony z zewnątrz
	//providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
}
